{
  "hash": "1836176dc235227997ea03836c747e34",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 7\"\ndescription:  |\n  Blog Post 7 of Team 2\nauthor: \"\"\ndate: \"2024-04-24\"\ndate-modified: \"2024-04-24\"\ndraft: FALSE\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"combining-datasets.R\")\nlibrary(dplyr)\nlibrary(tibble)  # For more robust data frame operations\n\n# Assuming police_dem is already loaded in your R environment\n\n# Calculating total deaths and racial composition percentages\ndeath_counts <- police_dem %>%\n  group_by(State, City) %>%\n  summarize(\n    TotalDeaths = n(),  # Count of deaths\n    .groups = 'drop'  # Drop grouping structure after summarizing\n  )\n\nracial_composition <- police_dem %>%\n  group_by(State, City, Race) %>%\n  summarize(\n    Count = n(),\n    .groups = 'drop'\n  ) %>%\n  group_by(State, City) %>%\n  mutate(\n    Percentage = Count / sum(Count) * 100\n  )\n\n# Calculate discrepancies (Example: comparing racial percentages with total deaths)\ndiscrepancies <- racial_composition %>%\n  left_join(death_counts, by = c(\"State\", \"City\")) %>%\n  mutate(\n    Discrepancy = abs(Percentage - (TotalDeaths / sum(TotalDeaths) * 100))\n  ) %>%\n  arrange(desc(Discrepancy))\n\n# Identify and display locations with the highest discrepancies\ntop_discrepancies <- discrepancies %>%\n  top_n(1, Discrepancy)\n\nprint(top_discrepancies)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 556 × 7\n# Groups:   State, City [456]\n   State                City      Race  Count Percentage TotalDeaths Discrepancy\n   <chr>                <chr>     <chr> <int>      <dbl>       <int>       <dbl>\n 1 District of Columbia Washingt… Blac…    24       92.3          26        59.0\n 2 Pennsylvania         Philadel… Blac…    15       83.3          18        58.3\n 3 Louisiana            New Orle… Blac…    25       86.2          29        52.9\n 4 California           Oakland   Blac…    30       75            40        50  \n 5 California           Santa Ana Hisp…    18       75            24        50  \n 6 Nevada               Henderson White    14       73.7          19        48.7\n 7 Oregon               Portland  White    28       73.7          38        48.7\n 8 Illinois             Chicago   Blac…    67       73.6          91        48.6\n 9 Nevada               Reno      White    19       73.1          26        48.1\n10 Washington           Spokane   White    14       77.8          18        44.4\n# ℹ 546 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n# Assuming police_dem is already loaded in your R environment\n\n# Calculating total deaths for each race\nracial_composition <- police_dem %>%\n  group_by(Race) %>%\n  summarize(\n    TotalDeaths = n(),  # Count of deaths per race\n    .groups = 'drop'  # Drop grouping structure after summarizing\n  )\n\n# Calculate the death rate for each race\nracial_composition <- racial_composition %>%\n  mutate(\n    DeathRate = TotalDeaths / sum(TotalDeaths) * 100  # Convert to percentage\n  ) %>%\n  arrange(desc(DeathRate))\n\n# Display the death rates for all races\nprint(racial_composition)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  Race                              TotalDeaths DeathRate\n  <chr>                                   <int>     <dbl>\n1 Black or African-American                1441    35.6  \n2 White                                    1369    33.8  \n3 Hispanic or Latino                       1069    26.4  \n4 Asian                                     100     2.47 \n5 American Indian and Alaska Native          41     1.01 \n6 Other                                      27     0.667\n```\n:::\n\n```{.r .cell-code}\n# Identify and display the race with the highest death rate\nhighest_death_rate_race <- racial_composition %>%\n  slice_max(DeathRate, n = 1)  # Get the race with the highest death rate\n\nprint(highest_death_rate_race)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  Race                      TotalDeaths DeathRate\n  <chr>                           <int>     <dbl>\n1 Black or African-American        1441      35.6\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}