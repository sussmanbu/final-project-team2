---
title: "Post 7"
description:  |
  Post 7 from team 2
author: ""
date: "2024-05-01"
date-modified: "2024-05-01"
draft: FALSE
---

We started this project with the goal of investigating possible racial disparities in police fatalities. After exploring different possible relationships in our previous blog posts, we want to focus on how the representation of the races in the police fatality dataset compare to the representation of the races in the demographic dataset. Weâ€™re interested in seeing if certain races have a higher prevalence in the police fatality dataset than would be expected from the city demographic information. Our thesis is that there is a racial disparity in the demographics of police-related fatalities. In addition, this racial disparity more heavily affects Black people. We have found that Black people have the highest mortality rate among all the cities on average. 
	To investigate our thesis, we first calculated the total deaths and racial composition percentages of the police fatalities. We then calculated discrepancies in the data, comparing racial percentages with total deaths. From there we looked at which cities had the highest discrepancies. 


```{r}

source("combining-datasets.R")
library(dplyr)
library(tibble)  # For more robust data frame operations

# Assuming police_dem is already loaded in your R environment

# Calculating total deaths and racial composition percentages
death_counts <- police_dem %>%
  group_by(State, City) %>%
  summarize(
    TotalDeaths = n(),  # Count of deaths
    .groups = 'drop'  # Drop grouping structure after summarizing
  )

racial_composition <- police_dem %>%
  group_by(State, City, Race) %>%
  summarize(
    Count = n(),
    .groups = 'drop'
  ) %>%
  group_by(State, City) %>%
  mutate(
    Percentage = Count / sum(Count) * 100
  )

# Calculate discrepancies (Example: comparing racial percentages with total deaths)
discrepancies <- racial_composition %>%
  left_join(death_counts, by = c("State", "City")) %>%
  mutate(
    Discrepancy = abs(Percentage - (TotalDeaths / sum(TotalDeaths) * 100))
  ) %>%
  arrange(desc(Discrepancy))

# Identify and display locations with the highest discrepancies
top_discrepancies <- discrepancies %>%
  top_n(1, Discrepancy)

print(top_discrepancies)


```

```{r}

library(dplyr)

# Assuming police_dem is already loaded in your R environment

# Calculating total deaths for each race
racial_composition <- police_dem %>%
  group_by(Race) %>%
  summarize(
    TotalDeaths = n(),  # Count of deaths per race
    .groups = 'drop'  # Drop grouping structure after summarizing
  )

# Calculate the death rate for each race
racial_composition <- racial_composition %>%
  mutate(
    DeathRate = TotalDeaths / sum(TotalDeaths) * 100  # Convert to percentage
  ) %>%
  arrange(desc(DeathRate))

# Display the death rates for all races
print(racial_composition)

# Identify and display the race with the highest death rate
highest_death_rate_race <- racial_composition %>%
  slice_max(DeathRate, n = 1)  # Get the race with the highest death rate

print(highest_death_rate_race)

```

